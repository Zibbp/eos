// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: chapters.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type BatchInsertChaptersParams struct {
	ID        pgtype.UUID
	Title     string
	StartTime int32
	EndTime   int32
	VideoID   pgtype.UUID
}

const getChaptersByVideoId = `-- name: GetChaptersByVideoId :many
SELECT id, title, start_time, end_time, video_id FROM chapters
WHERE video_id = $1
ORDER BY start_time ASC
`

func (q *Queries) GetChaptersByVideoId(ctx context.Context, videoID pgtype.UUID) ([]Chapter, error) {
	rows, err := q.db.Query(ctx, getChaptersByVideoId, videoID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Chapter
	for rows.Next() {
		var i Chapter
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.StartTime,
			&i.EndTime,
			&i.VideoID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
