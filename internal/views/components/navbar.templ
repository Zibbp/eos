package components

templ Navbar() {
	<div class="navbar bg-base-200 h-16">
		<div hx-boost="true" class="flex-1">
			<a href="/" class="btn btn-ghost text-xl no-animation">Eos</a>
			<ul class="menu menu-horizontal px-1">
				<li><a href="/channels">Channels</a></li>
			</ul>
		</div>
		<div class="flex-none gap-2">
			<div hx-boost="true" class="dropdown z-50">
				<div tabindex="0" role="button" class="btn m-1">Admin</div>
				<ul tabindex="0" class="dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow">
					<li><a hx-post="/api/v1/scanner/start">Start Scan</a></li>
					<li><a href="/riverui/" target="_blank">Tasks</a></li>
					<li><a href="/admin/blocked-paths">Blocked Paths</a></li>
				</ul>
			</div>
			<div class="dropdown z-50">
				<div tabindex="0" role="button" class="btn m-1">Theme</div>
				<ul id="themeList" tabindex="0" class="dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow">
					<!-- Themes will be dynamically inserted here -->
				</ul>
			</div>
			<div class="form-control">
				<input id="search-input" type="text" placeholder="Search" class="input input-bordered w-24 md:w-auto"/>
			</div>
		</div>
	</div>
	// redirect search - htmx can't be used because it cannot swap the entire body element
	<script>
        document.addEventListener('keydown', function(event) {
            if (event.target.id === 'search-input' && event.key === 'Enter') {
                const query = event.target.value.trim()

                if (query) {
                    window.location.href = `/videos/search?q=${encodeURIComponent(query)}`
                }
            }
        })
    </script>
	// populate themes
	<script>
    (function () {

        const themes = [
            "light", "dark", "cupcake", "bumblebee", "emerald", "corporate", "synthwave", "retro", "cyberpunk",
            "valentine", "halloween", "garden", "forest", "aqua", "lofi", "pastel", "fantasy", "wireframe",
            "black", "luxury", "dracula", "cmyk", "autumn", "business", "acid", "lemonade", "night", "coffee",
            "winter", "dim", "nord", "sunset"
        ];

        function initializeThemeDropdown() {
            const themeList = document.getElementById('themeList');

            if (themeList && themeList.children.length === 0) {
                themes.forEach(theme => {
                    const li = document.createElement('li');
                    const a = document.createElement('a');
                    a.setAttribute('data-set-theme', theme);
                    a.setAttribute('data-act-class', 'ACTIVECLASS');
                    a.textContent = theme;
                    a.addEventListener('click', () => setTheme(theme));
                    li.appendChild(a);
                    themeList.appendChild(li);
                });
            }

            const currentTheme = localStorage.getItem('theme') || 'light';
            setTheme(currentTheme);
        }

        function setTheme(theme) {
            document.documentElement.setAttribute('data-theme', theme);
            localStorage.setItem('theme', theme);

            const links = document.querySelectorAll('#themeList a');
            links.forEach(link => {
                if (link.getAttribute('data-set-theme') === theme) {
                    link.classList.add('ACTIVECLASS');
                } else {
                    link.classList.remove('ACTIVECLASS');
                }
            });
        }

        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initializeThemeDropdown);
        } else {
            initializeThemeDropdown();
        }

        window.setTheme = setTheme;
    })();
</script>
}
