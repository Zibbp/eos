// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Navbar() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"navbar bg-base-200 h-16\"><div hx-boost=\"true\" class=\"flex-1\"><a href=\"/\" class=\"btn btn-ghost text-xl no-animation\">Eos</a><ul class=\"menu menu-horizontal px-1\"><li><a href=\"/channels\">Channels</a></li></ul></div><div class=\"flex-none gap-2\"><div hx-boost=\"true\" class=\"dropdown z-50\"><div tabindex=\"0\" role=\"button\" class=\"btn m-1\">Admin</div><ul tabindex=\"0\" class=\"dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow\"><li><a hx-post=\"/api/v1/scanner/start\">Start Scan</a></li><li><a href=\"/admin/blocked-paths\">Blocked Paths</a></li></ul></div><div class=\"dropdown z-50\"><div tabindex=\"0\" role=\"button\" class=\"btn m-1\">Theme</div><ul id=\"themeList\" tabindex=\"0\" class=\"dropdown-content menu bg-base-100 rounded-box z-[1] w-52 p-2 shadow\"><!-- Themes will be dynamically inserted here --></ul></div><div class=\"form-control\"><input id=\"search-input\" type=\"text\" placeholder=\"Search\" class=\"input input-bordered w-24 md:w-auto\"></div></div></div><script>\n        document.addEventListener('keydown', function(event) {\n            if (event.target.id === 'search-input' && event.key === 'Enter') {\n                const query = event.target.value.trim()\n\n                if (query) {\n                    window.location.href = `/videos/search?q=${encodeURIComponent(query)}`\n                }\n            }\n        })\n    </script><script>\n    (function () {\n\n        const themes = [\n            \"light\", \"dark\", \"cupcake\", \"bumblebee\", \"emerald\", \"corporate\", \"synthwave\", \"retro\", \"cyberpunk\",\n            \"valentine\", \"halloween\", \"garden\", \"forest\", \"aqua\", \"lofi\", \"pastel\", \"fantasy\", \"wireframe\",\n            \"black\", \"luxury\", \"dracula\", \"cmyk\", \"autumn\", \"business\", \"acid\", \"lemonade\", \"night\", \"coffee\",\n            \"winter\", \"dim\", \"nord\", \"sunset\"\n        ];\n\n        function initializeThemeDropdown() {\n            const themeList = document.getElementById('themeList');\n\n            if (themeList && themeList.children.length === 0) {\n                themes.forEach(theme => {\n                    const li = document.createElement('li');\n                    const a = document.createElement('a');\n                    a.setAttribute('data-set-theme', theme);\n                    a.setAttribute('data-act-class', 'ACTIVECLASS');\n                    a.textContent = theme;\n                    a.addEventListener('click', () => setTheme(theme));\n                    li.appendChild(a);\n                    themeList.appendChild(li);\n                });\n            }\n\n            const currentTheme = localStorage.getItem('theme') || 'light';\n            setTheme(currentTheme);\n        }\n\n        function setTheme(theme) {\n            document.documentElement.setAttribute('data-theme', theme);\n            localStorage.setItem('theme', theme);\n\n            const links = document.querySelectorAll('#themeList a');\n            links.forEach(link => {\n                if (link.getAttribute('data-set-theme') === theme) {\n                    link.classList.add('ACTIVECLASS');\n                } else {\n                    link.classList.remove('ACTIVECLASS');\n                }\n            });\n        }\n\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', initializeThemeDropdown);\n        } else {\n            initializeThemeDropdown();\n        }\n\n        window.setTheme = setTheme;\n    })();\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
